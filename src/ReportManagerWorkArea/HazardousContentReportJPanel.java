/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ReportManagerWorkArea;

import Business.BarChart.HazardousContentReport;
import Business.BarChart.Report;
import Business.customer.MasterOrderList;
import business.ecosystem.Ecosystem;
import business.enterprise.Enterprise;
import business.enterprise.productionEnterprise;
import business.network.Network;
import business.organization.Organization;
import business.organization.ReportOrganization;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author mrunalbhalerao
 */
public class HazardousContentReportJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HazardousContentReportJPanel
     */
    
    private MasterOrderList mod;
    private JPanel userProcessContainer;
    Report report ;
    private Ecosystem business;
    
    final String applicationTitle = "Hazardous Content Chart";
    final String chartTitle = "Hazardous Content Chart";
    float fabricTypeCEContent = 0;
    float fabricTypeWTContent = 0;
    float fabricTypeWContent = 0;
    
    float designTechniqueCEContent = 0;
    float designTechniqueWTContent = 0;
    float designTechniqueWContent = 0;
    
    float manufacturingProcessCEContent = 0;
    float manufacturingProcessWTContent = 0;
    float manufacturingProcessWContent = 0;

    
    public HazardousContentReportJPanel(JPanel userProcessContainer, MasterOrderList mod,Ecosystem business) {
        initComponents();
        
        this.mod = mod;
        this.report = new Report();
        this.userProcessContainer = userProcessContainer;
        this.business=business;
        
        addReportToOrganization();
        
        
        
        
    }
    
    public void addReportToOrganization(){
         for(Network network: business.getNetworkList())
        {
            for(Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList())
            {
                if(enterprise instanceof productionEnterprise)
                {
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
                    {
                        if(organization instanceof ReportOrganization)
                        {
                            ((ReportOrganization) organization).setReport(report);
                        }
                    }
                }
            }
        }    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton7 = new javax.swing.JButton();
        reportDisplayjPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        airFilterjComboBox = new javax.swing.JComboBox<>();
        engineTypejComboBox = new javax.swing.JComboBox();
        generatePieChartjButton = new javax.swing.JButton();
        pieReportjPanel = new javax.swing.JPanel();
        generateGraphjButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        manufacturingProcessjComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 204));
        setForeground(new java.awt.Color(102, 0, 51));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton7.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        backJButton7.setForeground(new java.awt.Color(102, 0, 51));
        backJButton7.setText("Back");
        backJButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton7ActionPerformed(evt);
            }
        });
        add(backJButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 15, 80, 40));

        reportDisplayjPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        reportDisplayjPanel.setLayout(new java.awt.BorderLayout());
        add(reportDisplayjPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 500, 400));

        jLabel7.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 0, 51));
        jLabel7.setText("Fabric Type");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        jLabel8.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 0, 51));
        jLabel8.setText("Design Technique");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, -1, -1));

        airFilterjComboBox.setForeground(new java.awt.Color(102, 0, 51));
        airFilterjComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cotton", "Polyester", "Polyester-Cotton", "Satin", "Jersey", "Linen", "Fleece" }));
        add(airFilterjComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 140, 30));

        engineTypejComboBox.setForeground(new java.awt.Color(102, 0, 51));
        engineTypejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Printing", "Embroidery" }));
        engineTypejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                engineTypejComboBoxActionPerformed(evt);
            }
        });
        add(engineTypejComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 130, 140, -1));

        generatePieChartjButton.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        generatePieChartjButton.setForeground(new java.awt.Color(102, 0, 51));
        generatePieChartjButton.setText("Generate Cumulative Graph ");
        generatePieChartjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatePieChartjButtonActionPerformed(evt);
            }
        });
        add(generatePieChartjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 210, -1, 40));

        pieReportjPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        add(pieReportjPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 280, 680, 400));

        generateGraphjButton1.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        generateGraphjButton1.setForeground(new java.awt.Color(102, 0, 51));
        generateGraphjButton1.setText("Generate Graph");
        generateGraphjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateGraphjButton1ActionPerformed(evt);
            }
        });
        add(generateGraphjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, -1, -1));

        jLabel9.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 0, 51));
        jLabel9.setText("Manufacturing Process");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 130, -1, -1));

        manufacturingProcessjComboBox.setForeground(new java.awt.Color(102, 0, 51));
        manufacturingProcessjComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bleaching", "Dyeing" }));
        add(manufacturingProcessjComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 130, 140, 30));

        jLabel1.setFont(new java.awt.Font("Malayalam MN", 1, 36)); // NOI18N
        jLabel1.setText("The Cloth Factory");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton7ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton7ActionPerformed

    private void engineTypejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_engineTypejComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_engineTypejComboBoxActionPerformed

    private void generatePieChartjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatePieChartjButtonActionPerformed

        DefaultCategoryDataset barchartdata = new DefaultCategoryDataset();
        //setting values of the bar chart
        barchartdata.setValue(report.getCumCarbonEmission(), "Carbon Emission", "Carbon Emission");
        barchartdata.setValue(report.getCumWaterToxin(), "Carbon Emission", "Water Toxin");
        barchartdata.setValue(report.getCumWaste(), "Carbon Emission", "Waste");

        JFreeChart barchart = ChartFactory.createBarChart3D("Report", "TYPES", "Hazardous Content Value", barchartdata, PlotOrientation.VERTICAL, true, true, false);
        CategoryPlot p = barchart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame chartfn = new ChartFrame("REVENUE GENERATION", barchart, true);
        //initComponents();
        chartfn.setSize(650, 400);

        pieReportjPanel.removeAll();
        pieReportjPanel.add(chartfn.getChartPanel());
        pieReportjPanel.setVisible(true);
        pieReportjPanel.setEnabled(true);
        pieReportjPanel.validate();
    }//GEN-LAST:event_generatePieChartjButtonActionPerformed

    private void generateGraphjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateGraphjButton1ActionPerformed
        setValuesForGraph();
    }//GEN-LAST:event_generateGraphjButton1ActionPerformed

private void setValuesForGraph() {

        if (airFilterjComboBox.getSelectedItem().equals("Cotton")) {
            fabricTypeCEContent = (float) (fabricTypeCEContent + 3.0);
            fabricTypeWTContent = (float) (fabricTypeWTContent + 4.0);
            fabricTypeWContent = (float) (fabricTypeWContent + 3.4);
        } else if (airFilterjComboBox.getSelectedItem().equals("Polyester")) {
            fabricTypeCEContent = (float) (fabricTypeCEContent + 6.7);
            fabricTypeWTContent = (float) (fabricTypeWTContent + 8.8);
            fabricTypeWContent = (float) (fabricTypeWContent + 7.9);
        } else if (airFilterjComboBox.getSelectedItem().equals("Polyester-Cotton")) {
            fabricTypeCEContent = (float) (fabricTypeCEContent + 2.3);
            fabricTypeWTContent = (float) (fabricTypeWTContent + 5.4);
            fabricTypeWContent = (float) (fabricTypeWContent + 6.8);
        } else if (airFilterjComboBox.getSelectedItem().equals("Satin")) {
            fabricTypeCEContent = (float) (fabricTypeCEContent + 8.5);
            fabricTypeWTContent = (float) (fabricTypeWTContent + 9.02);
            fabricTypeWContent = (float) (fabricTypeWContent + 8.79);
        } else if (airFilterjComboBox.getSelectedItem().equals("Jersey")) {
            fabricTypeCEContent = (float) (fabricTypeCEContent + 2.8);
            fabricTypeWTContent = (float) (fabricTypeWTContent + 3.8);
            fabricTypeWContent = (float) (fabricTypeWContent + 3.48);
        }
        else if (airFilterjComboBox.getSelectedItem().equals("Linen")) {
            fabricTypeCEContent = (float) (fabricTypeCEContent + 2.8);
            fabricTypeWTContent = (float) (fabricTypeWTContent + 3.8);
            fabricTypeWContent = (float) (fabricTypeWContent + 3.48);
        }
        else if (airFilterjComboBox.getSelectedItem().equals("Fleece")) {
            fabricTypeCEContent = (float) (fabricTypeCEContent + 2.8);
            fabricTypeWTContent = (float) (fabricTypeWTContent + 3.8);
            fabricTypeWContent = (float) (fabricTypeWContent + 3.48);
        }

        if (engineTypejComboBox.getSelectedItem().equals("Printing")) {
            designTechniqueCEContent = (float) (designTechniqueCEContent + 8.8);
            designTechniqueWTContent = (float) (designTechniqueWTContent + 9.78);
            designTechniqueWContent = (float) (designTechniqueWContent + 9.0);
        } else if (engineTypejComboBox.getSelectedItem().equals("Embroidery")) {
            designTechniqueCEContent = (float) (designTechniqueCEContent + 6.87);
            designTechniqueWTContent = (float) (designTechniqueWTContent+ 8.85);
            designTechniqueWContent = (float) (designTechniqueWContent + 5.7);
        } 
        
        if (manufacturingProcessjComboBox.getSelectedItem().equals("Bleaching")) {
            manufacturingProcessCEContent = (float) (manufacturingProcessCEContent + 8.8);
            manufacturingProcessWTContent = (float) (manufacturingProcessWTContent + 9.78);
            manufacturingProcessWContent = (float) (manufacturingProcessWContent + 9.0);
        } else if (manufacturingProcessjComboBox.getSelectedItem().equals("Dyeing")) {
            manufacturingProcessCEContent = (float) (manufacturingProcessCEContent + 6.87);
            manufacturingProcessWTContent = (float) (manufacturingProcessWTContent + 8.85);
            manufacturingProcessWContent = (float) (manufacturingProcessWContent + 5.7);
        } 


        report.setCarbonEmissionFabricType(fabricTypeCEContent);
        report.setWaterToxinFabricType(fabricTypeWTContent);
        report.setWasteFabricType(fabricTypeWContent);

        report.setCarbonEmissionDesignTechnique(designTechniqueCEContent);
        report.setWaterToxinDesignTechnque(designTechniqueWTContent);
        report.setWasteDesignTechnique(designTechniqueWContent);

        report.setCarbonEmissionManufacturingProcess(manufacturingProcessCEContent);
        report.setWaterToxinManufacturingProcess(manufacturingProcessWTContent);
        report.setWasteManufacturingProcess(manufacturingProcessWContent);

        
        //For use in pie-chart   
        report.setCumCarbonEmission(fabricTypeCEContent + designTechniqueCEContent + manufacturingProcessCEContent);
        report.setCumWaterToxin(fabricTypeWTContent + designTechniqueWTContent + manufacturingProcessWTContent);
        report.setCumWaste(fabricTypeWContent + designTechniqueWContent + manufacturingProcessWContent);


        //initComponents();
        HazardousContentReport chart = new HazardousContentReport(applicationTitle, chartTitle, report);
        reportDisplayjPanel.removeAll();
        reportDisplayjPanel.add(chart.getChartPanel());
        reportDisplayjPanel.setVisible(true);
        reportDisplayjPanel.validate();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> airFilterjComboBox;
    private javax.swing.JButton backJButton7;
    private javax.swing.JComboBox engineTypejComboBox;
    private javax.swing.JButton generateGraphjButton1;
    private javax.swing.JButton generatePieChartjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> manufacturingProcessjComboBox;
    private javax.swing.JPanel pieReportjPanel;
    private javax.swing.JPanel reportDisplayjPanel;
    // End of variables declaration//GEN-END:variables
}
